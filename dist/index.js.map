{"version":3,"sources":["../node_modules/.pnpm/tsup@8.1.0_typescript@5.5.2/node_modules/tsup/assets/cjs_shims.js","../index.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","#!/usr/bin/env node\n\nimport path from 'node:path'\nimport { cp } from 'node:fs/promises'\nimport { fileURLToPath } from 'node:url'\nimport pc from 'picocolors'\nimport prompts from 'prompts'\n\nconst TEMPLATES = [\n  {\n    title: 'Next.js + Shadcn/ui + ESlint',\n    value: 'next-shadcn-eslint'\n  },\n  {\n    title: 'React.js + Vite + ESlint',\n    value: 'react-tw-eslint'\n  }\n]\n\nasync function main() {\n  const project = await prompts([\n    {\n      type: 'text',\n      name: 'name',\n      message: 'What are you cooking?',\n    },\n    {\n      type: 'select',\n      name: 'template',\n      message: 'Which kind of stack would you like to use?',\n      choices: TEMPLATES\n    }\n  ],\n    {\n      onCancel: () => {\n        console.log('\\nBye üëè\\n')\n        process.exit(0)\n      }\n    }\n  )\n\n  const template = path.join(\n    path.dirname(fileURLToPath(import.meta.url)),\n    'templates',\n    project.template\n  )\n\n  const destination = path.join(process.cwd(), project.name)\n\n  await cp(path.join(template), destination, { recursive: true })\n  //console.log({ template, destination })\n\n  console.log(pc.bold(pc.blue(`\\n  Project ${project.name} initialized!`)))\n  console.log(pc.cyan(`    template copied ${project.template}`))\n  console.log(pc.black(`\\n    ${pc.bgBlue(' Run üöÄ \\n')}`))\n  console.log(`    - ${pc.blue(`cd ${project.name}`)}`)\n  console.log(`    - ${pc.blue(`pnpm install`)}`)\n  console.log(`    - ${pc.blue(`pnpm run dev`)}`)\n  console.log('\\n    Good cooking!\\n')\n}\n\nmain()\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,mBAAmB,MACvB,OAAO,aAAa,cAChB,IAAI,IAAI,UAAU,UAAU,EAAE,OAC7B,SAAS,iBAAiB,SAAS,cAAc,OAClD,IAAI,IAAI,WAAW,SAAS,OAAO,EAAE;AAEpC,IAAM,gBAAgC,iCAAiB;;;ACT9D,uBAAiB;AACjB,sBAAmB;AACnB,sBAA8B;AAC9B,wBAAe;AACf,qBAAoB;AAEpB,IAAM,YAAY;AAAA,EAChB;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AACF;AAEA,eAAe,OAAO;AACpB,QAAM,UAAU,UAAM,eAAAA;AAAA,IAAQ;AAAA,MAC5B;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,MACX;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACE;AAAA,MACE,UAAU,MAAM;AACd,gBAAQ,IAAI,mBAAY;AACxB,gBAAQ,KAAK,CAAC;AAAA,MAChB;AAAA,IACF;AAAA,EACF;AAEA,QAAM,WAAW,iBAAAC,QAAK;AAAA,IACpB,iBAAAA,QAAK,YAAQ,+BAAc,aAAe,CAAC;AAAA,IAC3C;AAAA,IACA,QAAQ;AAAA,EACV;AAEA,QAAM,cAAc,iBAAAA,QAAK,KAAK,QAAQ,IAAI,GAAG,QAAQ,IAAI;AAEzD,YAAM,oBAAG,iBAAAA,QAAK,KAAK,QAAQ,GAAG,aAAa,EAAE,WAAW,KAAK,CAAC;AAG9D,UAAQ,IAAI,kBAAAC,QAAG,KAAK,kBAAAA,QAAG,KAAK;AAAA,YAAe,QAAQ,IAAI,eAAe,CAAC,CAAC;AACxE,UAAQ,IAAI,kBAAAA,QAAG,KAAK,uBAAuB,QAAQ,QAAQ,EAAE,CAAC;AAC9D,UAAQ,IAAI,kBAAAA,QAAG,MAAM;AAAA,MAAS,kBAAAA,QAAG,OAAO,mBAAY,CAAC,EAAE,CAAC;AACxD,UAAQ,IAAI,SAAS,kBAAAA,QAAG,KAAK,MAAM,QAAQ,IAAI,EAAE,CAAC,EAAE;AACpD,UAAQ,IAAI,SAAS,kBAAAA,QAAG,KAAK,cAAc,CAAC,EAAE;AAC9C,UAAQ,IAAI,SAAS,kBAAAA,QAAG,KAAK,cAAc,CAAC,EAAE;AAC9C,UAAQ,IAAI,uBAAuB;AACrC;AAEA,KAAK;","names":["prompts","path","pc"]}